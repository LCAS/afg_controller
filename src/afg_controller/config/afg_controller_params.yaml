# Example Nav2 Controller Server Configuration with AFG Controller
# This file demonstrates how to configure the AFG controller as a Nav2 plugin

controller_server:
  ros__parameters:
    # Controller server settings
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    odom_topic: "odom"
    
    # Define plugins
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    
    # Progress checker - ensures robot is making progress
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    
    # Goal checker - determines when goal is reached
    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: true
    
    # AFG Controller Plugin Configuration
    FollowPath:
      plugin: "afg_controller::AFGController"
      
      # Velocity parameters
      desired_linear_vel: 0.5          # m/s - base forward velocity
      max_angular_vel: 1.0              # rad/s - maximum rotation speed
      
      # AFG algorithm parameters
      convergence_gain: 1.5             # gain for convergence to path (higher = faster convergence)
      flow_gain: 2.0                    # gain for flow along path (higher = stronger forward motion)
      boundary_layer: 0.1               # m - smooth transition zone near path
      lookahead_distance: 0.5           # m - distance to look ahead for path tangent
      
      # Transform parameters
      transform_tolerance: 0.1          # s - TF lookup tolerance
      max_robot_pose_search_dist: 10.0  # m - max distance to search for robot on path
